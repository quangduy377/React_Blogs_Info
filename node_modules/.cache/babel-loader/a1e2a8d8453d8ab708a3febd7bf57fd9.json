{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\duycs\\\\Desktop\\\\Duy\\\\Personal_Projects\\\\React_Blog_Info\\\\src\\\\components\\\\BlogList.jsx\",\n    _s = $RefreshSig$();\n\nimport BlogPost from \"./BlogPost\";\nimport Pagination from \"./Pagination\";\nimport React from \"react\";\nimport blogs from \"../data/blogs.json\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PAGE_SIZES = [15, 25, 50, 100];\n\nconst containTags = (filteredTags, existedTags) => {\n  //existedTags must contain or equal to filteredTags\n  if (filteredTags.length !== existedTags.length) {\n    return false;\n  }\n\n  for (let i = 0; i < filteredTags.length; i++) {\n    if (!existedTags.includes(filteredTags[i])) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nfunction BlogList(_ref) {\n  _s();\n\n  let {\n    tags\n  } = _ref;\n  const [curPageSize, setCurPageSize] = useState(PAGE_SIZES[0]); //default rows per page is 15\n\n  const [currentPage, setCurPage] = useState(1); //default current page is 1  \n\n  const currentPaginationData = blogs.posts.slice((currentPage - 1) * curPageSize, curPageSize * currentPage); // const [filteredPost, setFilteredPost] = useState(currentPaginationData)\n\n  const updateRowsPerPage = rows => {\n    setCurPageSize(+rows);\n    setCurPage(1);\n  };\n\n  const updatePage = curPage => {\n    setCurPage(curPage);\n  };\n\n  let filteredPost = [];\n\n  if (tags.length !== 0) {\n    for (let i = 0; i < currentPaginationData.length; i++) {\n      if (containTags(tags, currentPaginationData[i].tags)) {\n        filteredPost.push(currentPaginationData[i]);\n      }\n    }\n  } else {\n    filteredPost = currentPaginationData;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Pagination, {\n      currentPage: currentPage,\n      totalCount: blogs.posts.length,\n      pageSize: curPageSize,\n      pageSizeOptions: PAGE_SIZES,\n      onPageChange: updatePage,\n      onPageSizeOptionChange: updateRowsPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      // Do not remove the aria-label below, it is used for Hatchways automation.\n      \"aria-label\": \"blog list\",\n      children: filteredPost.map(blog => /*#__PURE__*/_jsxDEV(BlogPost, {\n        author: blog.author,\n        title: blog.title,\n        excerpt: blog.excerpt,\n        featureImage: blog.image\n      }, blog.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BlogList, \"npKTSAtYBufgGdlNfQS1BUvTUPw=\");\n\n_c = BlogList;\nexport default BlogList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlogList\");","map":{"version":3,"names":["BlogPost","Pagination","React","blogs","useState","useEffect","PAGE_SIZES","containTags","filteredTags","existedTags","length","i","includes","BlogList","tags","curPageSize","setCurPageSize","currentPage","setCurPage","currentPaginationData","posts","slice","updateRowsPerPage","rows","updatePage","curPage","filteredPost","push","map","blog","author","title","excerpt","image","id"],"sources":["C:/Users/duycs/Desktop/Duy/Personal_Projects/React_Blog_Info/src/components/BlogList.jsx"],"sourcesContent":["import BlogPost from \"./BlogPost\";\r\nimport Pagination from \"./Pagination\";\r\nimport React from \"react\";\r\nimport blogs from \"../data/blogs.json\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst PAGE_SIZES = [15, 25, 50, 100];\r\n\r\nconst containTags = (filteredTags, existedTags) => {\r\n  //existedTags must contain or equal to filteredTags\r\n  if (filteredTags.length !== existedTags.length) {\r\n    return false\r\n  }\r\n  for (let i = 0; i < filteredTags.length; i++) {\r\n    if (!existedTags.includes(filteredTags[i])) {\r\n      return false\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\nfunction BlogList({ tags }) {\r\n  const [curPageSize, setCurPageSize] = useState(PAGE_SIZES[0]) //default rows per page is 15\r\n  const [currentPage, setCurPage] = useState(1) //default current page is 1  \r\n  const currentPaginationData = blogs.posts.slice((currentPage - 1) * curPageSize, curPageSize * currentPage);\r\n  // const [filteredPost, setFilteredPost] = useState(currentPaginationData)\r\n  const updateRowsPerPage = (rows) => {\r\n    setCurPageSize(+rows)\r\n    setCurPage(1)\r\n  };\r\n  const updatePage = (curPage) => {\r\n    setCurPage(curPage)\r\n  };\r\n\r\n  let filteredPost = []\r\n  if (tags.length !== 0) {\r\n    for (let i = 0; i < currentPaginationData.length; i++) {\r\n      if (containTags(tags, currentPaginationData[i].tags)) {\r\n        filteredPost.push(currentPaginationData[i])\r\n      }\r\n    }\r\n  }\r\n  else{\r\n    filteredPost = currentPaginationData\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Pagination\r\n        currentPage={currentPage}\r\n        totalCount={blogs.posts.length}\r\n        pageSize={curPageSize}\r\n        pageSizeOptions={PAGE_SIZES}\r\n        onPageChange={updatePage}\r\n        onPageSizeOptionChange={updateRowsPerPage}\r\n      />\r\n      <ul\r\n        // Do not remove the aria-label below, it is used for Hatchways automation.\r\n        aria-label=\"blog list\"\r\n      >\r\n        {filteredPost.map((blog) => (\r\n          <BlogPost\r\n            key={blog.id}\r\n            author={blog.author}\r\n            title={blog.title}\r\n            excerpt={blog.excerpt}\r\n            featureImage={blog.image}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BlogList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}