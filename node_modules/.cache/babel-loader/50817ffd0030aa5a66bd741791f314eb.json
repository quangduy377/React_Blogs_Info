{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\duycs\\\\Desktop\\\\Duy\\\\Personal_Projects\\\\React_Blog_Info\\\\src\\\\components\\\\BlogList.jsx\",\n    _s = $RefreshSig$();\n\nimport BlogPost from \"./BlogPost\";\nimport Pagination from \"./Pagination\";\nimport React from \"react\";\nimport blogs from \"../data/blogs.json\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PAGE_SIZES = [15, 25, 50, 100];\n\nconst containTags = (filteredTags, existedTags) => {\n  //existedTags must contain or equal to filteredTags\n  if (filteredTags.length !== existedTags.length) {\n    return false;\n  }\n\n  for (let i = 0; i < filteredTags.length; i++) {\n    if (!existedTags.includes(filteredTags[i])) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nfunction BlogList(_ref) {\n  _s();\n\n  let {\n    tags\n  } = _ref;\n  const [curPageSize, setCurPageSize] = useState(PAGE_SIZES[0]); //default rows per page is 15\n\n  const [currentPage, setCurPage] = useState(1); //default current page is 1  \n\n  const currentPaginationData = blogs.posts.slice((currentPage - 1) * curPageSize, curPageSize * currentPage);\n  const [filteredPost, setFilteredPost] = useState(currentPaginationData);\n\n  const updateRowsPerPage = rows => {\n    setCurPageSize(+rows);\n    setCurPage(1);\n  };\n\n  const updatePage = curPage => {\n    setCurPage(curPage);\n  };\n\n  useEffect(() => {\n    let filteredPost = [];\n\n    if (tags.length !== 0) {\n      for (let i = 0; i < currentPaginationData.length; i++) {\n        if (containTags(tags, currentPaginationData[i].tags)) {\n          filteredPost.push(currentPaginationData[i]);\n        }\n      }\n    }\n\n    setFilteredPost;\n  }, [tags]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Pagination, {\n      currentPage: currentPage,\n      totalCount: blogs.posts.length,\n      pageSize: curPageSize,\n      pageSizeOptions: PAGE_SIZES,\n      onPageChange: updatePage,\n      onPageSizeOptionChange: updateRowsPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      // Do not remove the aria-label below, it is used for Hatchways automation.\n      \"aria-label\": \"blog list\",\n      children: filteredPost.map(blog => /*#__PURE__*/_jsxDEV(BlogPost, {\n        author: blog.author,\n        title: blog.title,\n        excerpt: blog.excerpt,\n        featureImage: blog.image\n      }, blog.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 12\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BlogList, \"mo9oLouCeb3nsr1/KBYUL4fi/6M=\");\n\n_c = BlogList;\nexport default BlogList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlogList\");","map":{"version":3,"names":["BlogPost","Pagination","React","blogs","useState","useEffect","PAGE_SIZES","containTags","filteredTags","existedTags","length","i","includes","BlogList","tags","curPageSize","setCurPageSize","currentPage","setCurPage","currentPaginationData","posts","slice","filteredPost","setFilteredPost","updateRowsPerPage","rows","updatePage","curPage","push","map","blog","author","title","excerpt","image","id"],"sources":["C:/Users/duycs/Desktop/Duy/Personal_Projects/React_Blog_Info/src/components/BlogList.jsx"],"sourcesContent":["import BlogPost from \"./BlogPost\";\r\nimport Pagination from \"./Pagination\";\r\nimport React from \"react\";\r\nimport blogs from \"../data/blogs.json\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst PAGE_SIZES = [15, 25, 50, 100];\r\n\r\nconst containTags = (filteredTags, existedTags) =>{\r\n  //existedTags must contain or equal to filteredTags\r\n  if(filteredTags.length!==existedTags.length){\r\n    return false\r\n  }\r\n  for(let i=0;i<filteredTags.length;i++){\r\n    if(!existedTags.includes(filteredTags[i])){\r\n      return false\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\nfunction BlogList({tags}) {\r\n  const [curPageSize, setCurPageSize] = useState(PAGE_SIZES[0]) //default rows per page is 15\r\n  const [currentPage, setCurPage] = useState(1) //default current page is 1  \r\n  const currentPaginationData = blogs.posts.slice((currentPage-1)*curPageSize, curPageSize * currentPage);\r\n  const [filteredPost, setFilteredPost] = useState(currentPaginationData)\r\n  const updateRowsPerPage = (rows) => {\r\n    setCurPageSize(+rows)\r\n    setCurPage(1)\r\n  };\r\n  const updatePage = (curPage) => {\r\n    setCurPage(curPage)\r\n  };\r\n\r\n  useEffect(()=>{\r\n    let filteredPost = []\r\n    if(tags.length!==0){\r\n      for(let i=0;i<currentPaginationData.length;i++){\r\n        if(containTags(tags,currentPaginationData[i].tags)){\r\n          filteredPost.push(currentPaginationData[i])\r\n        }\r\n      }\r\n    }\r\n    setFilteredPost\r\n  },[tags])\r\n\r\n\r\n  \r\n  \r\n\r\n  return (\r\n    <div>\r\n      <Pagination\r\n        currentPage={currentPage} \r\n        totalCount={blogs.posts.length}\r\n        pageSize={curPageSize} \r\n        pageSizeOptions={PAGE_SIZES}\r\n        onPageChange={updatePage}\r\n        onPageSizeOptionChange={updateRowsPerPage}\r\n      />\r\n      <ul\r\n        // Do not remove the aria-label below, it is used for Hatchways automation.\r\n        aria-label=\"blog list\"\r\n      >\r\n        {filteredPost.map((blog) => (\r\n           <BlogPost\r\n            key={blog.id}\r\n            author={blog.author}\r\n            title={blog.title}\r\n            excerpt={blog.excerpt}\r\n            featureImage={blog.image}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BlogList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}