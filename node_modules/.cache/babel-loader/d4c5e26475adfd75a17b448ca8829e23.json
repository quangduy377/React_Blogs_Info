{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\duycs\\\\Desktop\\\\Duy\\\\Personal_Projects\\\\React_Blog_Info\\\\src\\\\components\\\\BlogList.jsx\",\n    _s = $RefreshSig$();\n\nimport BlogPost from \"./BlogPost\";\nimport Pagination from \"./Pagination\";\nimport React from \"react\";\nimport blogs from \"../data/blogs.json\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useContext } from \"react\";\nimport { SearchContext } from \"../context/search-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PAGE_SIZES = [15, 25, 50, 100];\n\nconst containTags = (filteredTags, existedTags) => {\n  //existedTags must contain or equal to filteredTags\n  for (let i = 0; i < filteredTags.length; i++) {\n    if (!existedTags.includes(filteredTags[i])) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nfunction BlogList() {\n  _s();\n\n  const searchCtx = useContext(SearchContext);\n  const tags = searchCtx.tags;\n  const [curPageSize, setCurPageSize] = useState(PAGE_SIZES[0]); //default rows per page is 15\n\n  const [currentPage, setCurPage] = useState(1); //default current page is 1  \n\n  let filteredPost = [];\n\n  if (tags.length !== 0) {\n    for (let i = 0; i < blogs.posts.length; i++) {\n      if (containTags(tags, blogs.posts[i].tags)) {\n        filteredPost.push(blogs.posts[i]);\n      }\n    }\n  } else {\n    filteredPost = blogs.posts;\n  }\n\n  const currentPaginationData = filteredPost.slice((currentPage - 1) * curPageSize, curPageSize * currentPage);\n  useEffect(() => {\n    //reset to the first page if filtered tags changed\n    setCurPage(1);\n  }, [tags]);\n\n  const updateRowsPerPage = rows => {\n    setCurPageSize(+rows);\n    setCurPage(1);\n  };\n\n  const updatePage = curPage => {\n    setCurPage(curPage);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Pagination, {\n      currentPage: currentPage,\n      totalCount: filteredPost.length //blogs.posts.length\n      ,\n      pageSize: curPageSize,\n      pageSizeOptions: PAGE_SIZES,\n      onPageChange: updatePage,\n      onPageSizeOptionChange: updateRowsPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      // Do not remove the aria-label below, it is used for Hatchways automation.\n      \"aria-label\": \"blog list\",\n      children: currentPaginationData.map(blog => /*#__PURE__*/_jsxDEV(BlogPost, {\n        author: blog.author,\n        title: blog.title,\n        excerpt: blog.excerpt,\n        featureImage: blog.image,\n        tags: blog.tags.toString()\n      }, blog.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BlogList, \"S2BZiW2afk+v3W238MWV17Bz7NQ=\");\n\n_c = BlogList;\nexport default BlogList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlogList\");","map":{"version":3,"names":["BlogPost","Pagination","React","blogs","useState","useEffect","useContext","SearchContext","PAGE_SIZES","containTags","filteredTags","existedTags","i","length","includes","BlogList","searchCtx","tags","curPageSize","setCurPageSize","currentPage","setCurPage","filteredPost","posts","push","currentPaginationData","slice","updateRowsPerPage","rows","updatePage","curPage","map","blog","author","title","excerpt","image","toString","id"],"sources":["C:/Users/duycs/Desktop/Duy/Personal_Projects/React_Blog_Info/src/components/BlogList.jsx"],"sourcesContent":["import BlogPost from \"./BlogPost\";\r\nimport Pagination from \"./Pagination\";\r\nimport React from \"react\";\r\nimport blogs from \"../data/blogs.json\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { SearchContext } from \"../context/search-context\";\r\n\r\nconst PAGE_SIZES = [15, 25, 50, 100];\r\n\r\nconst containTags = (filteredTags, existedTags) => {\r\n  //existedTags must contain or equal to filteredTags\r\n  for (let i = 0; i < filteredTags.length; i++) {\r\n    if (!existedTags.includes(filteredTags[i])) {\r\n      return false\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\nfunction BlogList() {\r\n  const searchCtx = useContext(SearchContext)\r\n  const tags = searchCtx.tags\r\n  \r\n  const [curPageSize, setCurPageSize] = useState(PAGE_SIZES[0]) //default rows per page is 15\r\n  const [currentPage, setCurPage] = useState(1) //default current page is 1  \r\n  let filteredPost = []\r\n  if (tags.length !== 0) {\r\n    for (let i = 0; i < blogs.posts.length; i++) {\r\n      if (containTags(tags, blogs.posts[i].tags)) {\r\n        filteredPost.push(blogs.posts[i])\r\n      }\r\n    }\r\n  }\r\n  else{\r\n    filteredPost = blogs.posts\r\n  }\r\n  const currentPaginationData = filteredPost.slice((currentPage - 1) * curPageSize, curPageSize * currentPage);\r\n  useEffect(()=>{\r\n    //reset to the first page if filtered tags changed\r\n    setCurPage(1)\r\n  },[tags])\r\n  const updateRowsPerPage = (rows) => {\r\n    setCurPageSize(+rows)\r\n    setCurPage(1)\r\n  };\r\n  const updatePage = (curPage) => {\r\n    setCurPage(curPage)\r\n  };\r\n  return (\r\n    <div>\r\n      <Pagination\r\n        currentPage={currentPage}\r\n        totalCount={filteredPost.length} //blogs.posts.length\r\n        pageSize={curPageSize}\r\n        pageSizeOptions={PAGE_SIZES}\r\n        onPageChange={updatePage}\r\n        onPageSizeOptionChange={updateRowsPerPage}\r\n      />\r\n      <ul\r\n        // Do not remove the aria-label below, it is used for Hatchways automation.\r\n        aria-label=\"blog list\"\r\n      >\r\n        {currentPaginationData.map((blog) => (\r\n          <BlogPost\r\n            key={blog.id}\r\n            author={blog.author}\r\n            title={blog.title}\r\n            excerpt={blog.excerpt}\r\n            featureImage={blog.image}\r\n            tags = {blog.tags.toString()}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BlogList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}