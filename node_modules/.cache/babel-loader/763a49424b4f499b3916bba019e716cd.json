{"ast":null,"code":"export const DOTS = \"...\";\n\nfunction usePagination(_ref) {\n  let {\n    currentPage,\n    totalCount,\n    pageSize\n  } = _ref;\n  const totalPage = Math.ceil(totalCount / pageSize);\n\n  const hasLeftSibling = cur => {\n    return cur - 1 > 0;\n  };\n\n  const hasRightSibling = cur => {\n    return cur + 1 <= totalPage;\n  };\n\n  let paginationRange = [];\n\n  if (totalPage === 3) {\n    paginationRange = [1, 2, 3];\n  } else if (totalPage === 2) {\n    paginationRange = [1, 2];\n  } else if (totalPage === 1) {\n    paginationRange = [1];\n  } else if (totalPage > 3) {\n    //totalPage = 6\n    //currentPage: 1, 2, 3, 4, 5, 6\n    if (currentPage === 1 || currentPage === 2) {\n      paginationRange = [1, 2, 3, DOTS, totalPage];\n    } else if (currentPage === totalPage) {\n      paginationRange = [1, DOTS, totalPage - 2, totalPage - 1, totalPage];\n    } else {\n      if (currentPage + 1 === totalPage) {\n        paginationRange = [1, DOTS, currentPage - 1, currentPage, currentPage + 1];\n      }\n\n      if (currentPage + 1 < totalPage) {\n        paginationRange = [1, DOTS, currentPage - 1, currentPage, currentPage + 1, DOTS, totalPage];\n      }\n    }\n  }\n\n  return paginationRange;\n}\n\nexport default usePagination;","map":{"version":3,"names":["DOTS","usePagination","currentPage","totalCount","pageSize","totalPage","Math","ceil","hasLeftSibling","cur","hasRightSibling","paginationRange"],"sources":["C:/Users/duycs/Desktop/Duy/Personal_Projects/React_Blog_Info/src/hooks/usePagination.js"],"sourcesContent":["export const DOTS = \"...\";\r\n\r\n\r\nfunction usePagination({\r\n  currentPage,\r\n  totalCount,\r\n  pageSize\r\n}) {\r\n  const totalPage = Math.ceil(totalCount / pageSize)\r\n  const hasLeftSibling = (cur) =>{\r\n    return cur - 1 > 0\r\n  }\r\n  const hasRightSibling = (cur) =>{\r\n    return cur + 1 <= totalPage\r\n  }\r\n\r\n  let paginationRange = []\r\n  if(totalPage===3){\r\n    paginationRange = [1,2,3]\r\n  }\r\n  else if(totalPage===2){\r\n    paginationRange = [1,2]\r\n  }\r\n  else if(totalPage === 1){\r\n    paginationRange = [1]\r\n  }\r\n  else if(totalPage > 3){\r\n    //totalPage = 6\r\n    //currentPage: 1, 2, 3, 4, 5, 6\r\n    if(currentPage===1 || currentPage ===2){\r\n      paginationRange = [1,2,3,DOTS,totalPage]\r\n    }\r\n    else if(currentPage===totalPage){\r\n      paginationRange = [1,DOTS,totalPage-2, totalPage-1, totalPage]\r\n    }\r\n    else{\r\n      if(currentPage+1 === totalPage){\r\n        paginationRange = [1,DOTS,currentPage-1,currentPage,currentPage+1]\r\n      }\r\n      if(currentPage+1 < totalPage){\r\n        paginationRange = [1,DOTS,currentPage-1,currentPage,currentPage+1,DOTS,totalPage]\r\n      }\r\n    }\r\n  }\r\n  return paginationRange;\r\n}\r\n\r\nexport default usePagination;"],"mappings":"AAAA,OAAO,MAAMA,IAAI,GAAG,KAAb;;AAGP,SAASC,aAAT,OAIG;EAAA,IAJoB;IACrBC,WADqB;IAErBC,UAFqB;IAGrBC;EAHqB,CAIpB;EACD,MAAMC,SAAS,GAAGC,IAAI,CAACC,IAAL,CAAUJ,UAAU,GAAGC,QAAvB,CAAlB;;EACA,MAAMI,cAAc,GAAIC,GAAD,IAAQ;IAC7B,OAAOA,GAAG,GAAG,CAAN,GAAU,CAAjB;EACD,CAFD;;EAGA,MAAMC,eAAe,GAAID,GAAD,IAAQ;IAC9B,OAAOA,GAAG,GAAG,CAAN,IAAWJ,SAAlB;EACD,CAFD;;EAIA,IAAIM,eAAe,GAAG,EAAtB;;EACA,IAAGN,SAAS,KAAG,CAAf,EAAiB;IACfM,eAAe,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAlB;EACD,CAFD,MAGK,IAAGN,SAAS,KAAG,CAAf,EAAiB;IACpBM,eAAe,GAAG,CAAC,CAAD,EAAG,CAAH,CAAlB;EACD,CAFI,MAGA,IAAGN,SAAS,KAAK,CAAjB,EAAmB;IACtBM,eAAe,GAAG,CAAC,CAAD,CAAlB;EACD,CAFI,MAGA,IAAGN,SAAS,GAAG,CAAf,EAAiB;IACpB;IACA;IACA,IAAGH,WAAW,KAAG,CAAd,IAAmBA,WAAW,KAAI,CAArC,EAAuC;MACrCS,eAAe,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAOX,IAAP,EAAYK,SAAZ,CAAlB;IACD,CAFD,MAGK,IAAGH,WAAW,KAAGG,SAAjB,EAA2B;MAC9BM,eAAe,GAAG,CAAC,CAAD,EAAGX,IAAH,EAAQK,SAAS,GAAC,CAAlB,EAAqBA,SAAS,GAAC,CAA/B,EAAkCA,SAAlC,CAAlB;IACD,CAFI,MAGD;MACF,IAAGH,WAAW,GAAC,CAAZ,KAAkBG,SAArB,EAA+B;QAC7BM,eAAe,GAAG,CAAC,CAAD,EAAGX,IAAH,EAAQE,WAAW,GAAC,CAApB,EAAsBA,WAAtB,EAAkCA,WAAW,GAAC,CAA9C,CAAlB;MACD;;MACD,IAAGA,WAAW,GAAC,CAAZ,GAAgBG,SAAnB,EAA6B;QAC3BM,eAAe,GAAG,CAAC,CAAD,EAAGX,IAAH,EAAQE,WAAW,GAAC,CAApB,EAAsBA,WAAtB,EAAkCA,WAAW,GAAC,CAA9C,EAAgDF,IAAhD,EAAqDK,SAArD,CAAlB;MACD;IACF;EACF;;EACD,OAAOM,eAAP;AACD;;AAED,eAAeV,aAAf"},"metadata":{},"sourceType":"module"}